Running:
src/main.py --output_dir experiments --comment unsupervised pretraining --name container_traces_pretrained --records_file Unsupervised_records.xls --data_dir src/container_traces_21_a_b_c_d_e_f.csv --data_class container_traces --pattern TRAIN --val_ratio 0.2 --epochs 700 --lr 0.001 --optimizer RAdam --batch_size 2 --pos_encoding learnable --d_model 8

Using device: cuda
Loading and preprocessing data ...
16 samples may be used for training
5 samples will be used for validation
0 samples will be used for testing
Creating model ...
Model:
TSTransformerEncoder(
  (project_inp): Linear(in_features=4, out_features=8, bias=True)
  (pos_enc): LearnablePositionalEncoding(
    (dropout): Dropout(p=0.1, inplace=False)
  )
  (transformer_encoder): TransformerEncoder(
    (layers): ModuleList(
      (0-2): 3 x TransformerBatchNormEncoderLayer(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=8, out_features=8, bias=True)
        )
        (linear1): Linear(in_features=8, out_features=256, bias=True)
        (dropout): Dropout(p=0.1, inplace=False)
        (linear2): Linear(in_features=256, out_features=8, bias=True)
        (norm1): BatchNorm1d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (norm2): BatchNorm1d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dropout1): Dropout(p=0.1, inplace=False)
        (dropout2): Dropout(p=0.1, inplace=False)
      )
    )
  )
  (output_layer): Linear(in_features=8, out_features=4, bias=True)
  (dropout1): Dropout(p=0.1, inplace=False)
)
Total number of parameters: 85548
Trainable parameters: 85548
Evaluating on validation set ...
